# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
import pandas as pd
import streamlit as st
import joblib
#import pickle
from data_preprocessing import Processing
from PIL import Image

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ —Å–∞–π—Ç–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
st.set_page_config(page_icon="üèß", page_title="Client_outflow")
# image = Image.open('img.png')
# uploaded_img = st.file_uploader("img",type="jpg")
# st.open(uploaded_img)
# img = Image.open("https://github.com/Danil-Belokhvostik/Data-Science/blob/main/Forecasting_the_outflow_of_telecom_customers/img.jpg")
# st.image(img, width = 200 )
# st.image('https://github.com/Danil-Belokhvostik/Data-Science/blob/main/Forecasting_the_outflow_of_telecom_customers/img.jpg')
#image = Image.open('img.png')
#st.image(image)
st.title('–ü—Ä–æ–≥–Ω–æ–∑ –æ—Ç—Ç–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤')

# –ó–∞–¥–∞–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –º–æ–¥–µ–ª–∏
# joblib_file = 'joblib_cbc.pkl'
# joblib_file = "joblib_cbc.pkl"
# joblib_file = 'joblib_cbc.pkl'



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
def load_data():
    uploaded_file = st.file_uploader(label='–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏', type=['csv'])
    if uploaded_file is not None:

        return pd.read_csv(uploaded_file)
    else:
        return None

df = load_data()



if df is not None:
    # –û–±—Ä–∞–±–æ—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Processing
    proc = Processing()

    # –°–æ–∑–¥–∞–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–±—Ä–∞—Ç—å –∏–∑ –≤—ã–±–æ—Ä–∫–∏
    delete_features = ['begin_date', 'day', 'month', 'year', 'end_date', 'lifetime_m', 'total_charges']

    # –ü—Ä–æ–≤–µ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    test = proc.entire_graph(df, delete_features)

    # –ó–∞–≥—Ä—É–∑–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏ —Å –ø–æ–º–æ—â—å—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ load –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ joblib
    uploaded_model = st.file_uploader(label='–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –º–æ–¥–µ–ª—å—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ - .pkl', type=['pkl'])
    if uploaded_model is not None:
        joblib_cbc = joblib.load(uploaded_model)

    # –°–¥–µ–ª–∞–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    joblib_cbc_predict = joblib_cbc.predict(test)

    # –î–æ–±–∞–≤–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–Ω–æ–ø–∫–∏
    if st.button('–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è'):
        st.dataframe(df)
        if st.button('–°–∫—Ä—ã—Ç—å –¥–∞–Ω–Ω—ã–µ'):
            st.dataframe(df)
    if st.button('–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è'):
        st.dataframe(test)
        if st.button('–°–∫—Ä—ã—Ç—å –¥–∞–Ω–Ω—ã–µ'):
            st.dataframe(test)
    if st.button('–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å—Ñ–∏–∫–∞—Ü–∏–∏'):
        st.markdown('# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏')
        st.markdown('- 0 - –∫–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–µ—Ç—Å—è')
        st.markdown('- 1 - —Ä–∞—Å—Ç–æ—Ä–≥–Ω–µ—Ç –¥–æ–≥–æ–≤–æ—Ä')
        results = pd.DataFrame({'result':joblib_cbc_predict}, index=test.index)
        st.dataframe(results)
        if st.button('–°–∫—Ä—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã'):
            st.dataframe(test)

